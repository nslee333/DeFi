import Head from 'next/head'
import Image from 'next/image'
import styles from '../styles/Home.module.css'
import Web3Modal from "web3modal";
import React, { useEffect, useState, useRef } from "react";
import {providers, ethers} from "ethers";

export default function Home() {
  
  const [walletConnected, setWalletConnected] = useState(false);
  const web3ModalRef = useRef();

  const connectWallet = async () => {
    try {
      await getProviderOrSigner();
      setWalletConnected(true);
      
    } catch (error) {
      console.error(error);
    }
  }

  const getProviderOrSigner = async (needSigner = false) => {
    const provider = await web3ModalRef.current.connect();
    const web3Provider = new providers.Web3Provider(provider);

    const { chainId } = await web3Provider.getNetwork();
    if (chainId !== 5) {
      window.alert("Please change network to Goerli");
      throw new Error("Change the network to Goerli");
    }

    if (needSigner) {
      const signer = web3Provider.getSigner()
      return signer;
    }

    return web3Provider;
  }



  useEffect(() => {
    if(!walletConnected){
      web3ModalRef.current = new Web3Modal({
        network: "goerli",
        providerOptions: {},
        disableInjectedProvider: false
      })
      connectWallet();

    }
  }, [walletConnected]);


//  const contractInstance = async (needSigner = false) => {

//   try {

//     const providerInstance = await getProviderOrSigner();
//     const signerInstance = await getProviderOrSigner(true);

//     if (needSigner) {
//       let signerInstance = new ethers.Contract(
//         CONTRACT_ADDRESS,
//         CONTRACT_ABI,
//         signerInstance,
//       )
//       return signerInstance;
//     } else {
//       let providerInstance = new ethers.Contract(
//         CONTRACT_ADDRESS,
//         CONTRACT_ABI,
//         providerInstance,
//       )
//       return providerInstance;
//     }


    
//   } catch (error) {
//     console.error(error)
    
//   }
//   };





  // const viewPropertiesOfContract = async () => {

  //   let instance = await contractInstance();

  //   let tx = await instance.name();
  //   await tx.wait();
  //   console.log(tx);

  //   tx = await instance.symbol();
  //   await tx.wait();
  //   console.log(tx);

  //   tx = await instance.decimals();
  //   await tx.wait();
  //   console.log(tx);

  //   tx = await instance.totalSupply();
  //   await tx.wait();
  //   console.log(tx);



  // };

  
  
  
  
  
  
  
  
  
  
  
  
  function renderButton() {
    return (
      <button>Hi There</button>
    )

  }
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        
      {renderButton()}
        
          
      </main>

      <footer className={styles.footer}>
        <a
          href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
          target="_blank"
          rel="noopener noreferrer"
        >
          Powered by{' '}
          <span className={styles.logo}>
            <Image src="/vercel.svg" alt="Vercel Logo" width={72} height={16} />
          </span>
        </a>
      </footer>
    </div>
  )
}
